export const worksData = [
    {
      id: 'Harusagashi',
      title: 'はるさがし',
      icon: '/Harusagashi/icon.PNG',
      desc: '見習い魔法使いが春を作るための材料を集める探索型2Dアクションゲーム',
      playtime: 'およそ20分',
      video: 'https://www.youtube.com/embed/8OcvJ1uRpn4',
      tools: 'Unity 2021.3.11f1',
      period: 'およそ4か月（大学1年次に制作）',
      job: '企画・プログラマ・マップ制作',
      point: 'やわらかい雰囲気と簡単な実装でできるギミック',
      comment: `本作品は私が初めて作った思い入れのあるゲームです。
      サークル内で新入生同士でゲームを作るプロジェクトがありそこで制作しました。メンバーは私を含むプログラム担当3人、グラフィック担当2人、BGM担当2人でした。（プロジェクト開始ほどなくしてメンバーが減っていき結局プログラムを書いたのは私だけになりました...）
      プロジェクト当初はプログラミングの知識は皆無で、for文、関数すらもあまり理解できていないありさまでした。この時期に最も苦しかったことは「出てきた案のうち、どれが簡単に実装ができてどれが難しいのかすら分からなかったこと」でした。そんなこともあり、ゲームのギミックやプレイヤーの操作について固まったのはプロジェクト開始から2か月が経過したころでした。
      本作品は特に「簡単な処理でできるギミック」をたくさん盛り込んでいます。例えば、プレイヤーは普段、自由に空を飛べるのですが、「飛べないゾーン」というギミックを作りました。これはプレイヤーがこのゾーンに触れた時に飛行可能かのbool変数をfalseにするだけで実装出来ました。また、「雪山のもっとも大きな穴に飛び込め」というヒントに従ったアクションをすることで先に進めるという実装が簡単な謎解き的な要素も実現できました。他にも、鏡、跳ねてくる敵など実装が簡単だったからという理由で実装したギミックがたくさんあります。
      一方でプロジェクト終盤にはある程度プログラミングに慣れてきて、アイテムのセーブやボス戦も実装出来ました。
      総じて、2Dアクションゲームとしてはよくあるギミックが多くなってしまいましたが、これまで「あそぶ側」でしか体験したことが無いことを「あそぶ側」として実装することができた時には感動を覚えました。
      `,
      github: 'https://github.com/Yugo0716/Harusagashi',
      thumb: '/Harusagashi/Harusagashi.png',
      screenshots: [
        '/Harusagashi/Harusagashi1.png',
        '/Harusagashi/Harusagashi.png',
        '/Harusagashi/Harusagashi2.png',
        '/Harusagashi/Harusagashi3.png',
        '/Harusagashi/Harusagashi4.png',
        '/Harusagashi/Harusagashi5.png',
        '/Harusagashi/Harusagashi6.png'
      ]
    },
    {
      id: 'KarupasuQuiz',
      title: 'おやつカルパスかおやつカルパスじゃないかクイズ!!!',
      icon: '/KarupasuQuiz/icon.png',
      desc: '表示されるカルパスの画像を見て，それがおやつカルパスかそうでないカルパスか当てるクイズゲーム',
      playtime: 'およそ1分',
      video: 'https://www.youtube.com/embed/Y2TcxPhcO7E',
      tools: 'Unity 2021.3.11f1',
      period: 'およそ2週間（大学2年次に制作）',
      job: 'BGM以外すべて（企画・プログラマ・問題制作など）',
      point: 'いかにも素人が作ったような雑な設計と、画面にはカルパスの画像と「おやつカルパス」「おやつカルパスじゃない」というボタンが並んでいるだけの構図からなるシュールな雰囲気',
      comment: `このゲームはいわゆる「バカゲー」といわれる代物です。
      私はおやつカルパスが好きです。そこでふと、「おやつカルパスとそれ以外のカルパスを見分けるのって面白いのではないか」と思ってこのゲームの制作に乗り出しました。
      このゲームはとにかくクソゲー感を出すこととシュールな雰囲気を出すことを意識しました。
      まずゲーム画面の背景はUnityのデフォルトのカラーをそのまま使っていますし、フォントやボタンなどもデフォルトのものです。さらに、タイトル画面の文字の折り返しの箇所も中途半端です。
      画像に対してプレイヤーがボタンで回答した後、カルパスの画像がズームアウトして正解のカルパスが表示される演出がありますが、これもあえて元々ズームアウトされた写真を撮って、ズームインされた状態からズームアウトさせる処理ではなく、カルパスに近い所から引くようにビデオを撮影しています。
      こうすることで正解が出るときのズームアウトに手振れが出て以下にも素人が頑張って作った感が醸し出せていると思います。
      ちなみに、本作品の制作はほとんど私1人で行いましたが、BGMはサークルのメンバーに作ってもらいました。ゆる～い雰囲気が本作品の面白さを引き立てていて、楽しさを倍増させています。
      `,
      github: 'https://github.com/Yugo0716/KarupasuQuiz',
      thumb: '/KarupasuQuiz/KarupasuQuiz.png',
      screenshots: [
        '/KarupasuQuiz/KarupasuQuiz1.png',
        '/KarupasuQuiz/KarupasuQuiz.png',
        '/KarupasuQuiz/KarupasuQuiz2.png'
      ]
    },
    {
      id: 'Sushitotte',
      title: 'ねぇ！寿司取って～',
      icon: '/NeeSushitotte/icon.png',
      desc: '回転寿司で，同行者からの注文をこなしつつ自分が食べるお寿司をたくさん取るスコアアタックゲーム',
      playtime: 'およそ3分',
      video: 'https://www.youtube.com/embed/KkaV0E3c-Ps',
      tools: 'Unity 2022.3.9f1',
      period: 'およそ4か月（大学3~4年次に制作）',
      job: '企画・プログラマ',
      point: 'テーブル席でレーン側に座ってしまったことで醤油や注文された寿司を渡さなければいけないという現実でもあり得そうな状況を表現しつつ、マウスのドラッグ＆ドロップという簡単な操作であるものの操作の正確性によってスコアに差が出る難易度設計',
      comment: `本作品は回転寿司がテーマのゲームです。テーブル席でレーン側に座ってしまったことで醤油や注文された寿司を渡さなければいけないというちょっと現実でもあり得そうな状況に焦点を当てています。
      自分のお寿司をたくさん取りつつ、同行者の要求には素早く応えなければなりません。
      本作品の実装におけるテーマは「ランダム性」でした。本作品は「くいしんぼうモード」と「たべほうだいモード」の2つのモードがあります。「くいしんぼうモード」では60秒以内にとにかくたくさん寿司を取って要求に応えるスコアアタックモードです。プレイ中、システム内部では20秒ごとに序盤、中盤、終盤と分かれており、それぞれタイミングはランダムですが寿司が流れてくる個数は決まっています。流れる寿司の個数は固定でありながら、流すタイミングをランダムにし、それでいて最終スコアがランダム性による運に左右されにくくするようなバランスの調整が難しかったです。
      また、過去2作品よりも演出面の実装を強化しています。例えば寿司や醤油などにマウスカーソルを乗せた時には輪郭を太くさせ、また寿司などをドラッグしている時、そこでマウスを離せばスコアが加算されるという状況では該当のテーブル、吹き出しの色を変えるという処理をしました。これによりユーザにとっての視認性が向上しました。他にも、アニメーションの演出を増やし、ボタンを置いて画面遷移するときや、モード選択画面での背景が動いているようにしました。
      視覚面における演出を強化するためには、これまで以上にグラフィック担当との連携が必要でした。輪郭の太さや色、モード選択画面のイラストなどはお互いに議論して、実際に試してみるというサイクルを何度も繰り返しました。
      まだまだ不十分な部分はありますが、より市販されているようなクオリティの高いゲームに近づいたのではないかと思います。
      `,
      github: 'https://github.com/Yugo0716/AngrySushiParty',
      thumb: '/NeeSushitotte/NeeSushitotte.png',
      screenshots: [
        '/NeeSushitotte/NeeSushitotte1.png',
        '/NeeSushitotte/NeeSushitotte2.png',
        '/NeeSushitotte/NeeSushitotte3.png',
        '/NeeSushitotte/NeeSushitotte4.png',
        '/NeeSushitotte/NeeSushitotte5.png',
        '/NeeSushitotte/NeeSushitotte6.png',
      ],
      unityroom: 'https://unityroom.com/games/neesushitotte'
    },
    {
      id: 'Grandioso',
      title: 'Grandioso',
      desc: '洗足ゲーム音楽研究会とのコラボで紡ぐ王道RPG風リズムゲーム',
      playtime: 'およそ30分',
      video: 'https://www.youtube.com/embed/HwuwitfbQIQ',
      period: 'プロジェクト全体：およそ1年，自分が関わった部分：およそ2週間（大学4年次に制作）',
      job: '譜面制作',
      point: '（自分が関わった譜面制作について）独自のゲームシステムやストーリーのどの場面で戦うかを考慮した譜面配置',
      comment: `このゲームは私が所属していたサークルと洗足学園音楽大学の洗足ゲーム音楽研究会というサークルが共同で制作しました。
      王道RPG風リズムゲームということで，RPGのようなストーリーがあることと，ゲームのBGMのような音楽に合わせてプレイできること，そして独自のゲームシステムが魅力です。
      元々私はこのプロジェクトに参加しておりませんでしたが，開発後半の時期にリズムゲーム部分の譜面を作ってくれないかと誘いを受けて参加しました。
      譜面制作にあたり，プレイヤーが直感的に叩けるような譜面配置にすることはもちろんですが，私が担当した楽曲は，ストーリーにおいて，魔物の群れと戦う場面でプレイする楽曲であることと，この楽曲はそれ以前に魔物と戦った場面での楽曲のアレンジであったためそのことも意識して制作しました。
      例えば，序盤のイントロの場面では，群れが押し寄せてくることをイメージして，単純な4分の配置のハイスピード（音符が流れてくる速さ）を徐々に速くする演出を付けたり，楽曲全体において16分を連続で叩く部分を複数個所に配置したりしました。16分の配置は，楽曲において実際に音が鳴っていない箇所もありますが，この配置をする際にはプレイヤーにとって違和感が無いような配置になっているかにかなり注意を払いました。また，楽曲後半に入ったあたりの比較的落ち着いた個所では，左・中・右の3つのレーンを移動して叩くという独自のゲームシステムを生かし，リズムが取りやすい4分の配置にしつつ，左右に何度もレーンを移動させるような配置にすることで，複数の魔物が個々に襲ってくるようなイメージで忙しさを感じさせるような設計にしました。
      リズムゲームの譜面制作は初めての経験でしたが貴重な経験でした。`,
      link: 'https://micomprocedure.com/works/242',
      thumb: '/Grandioso/Grandioso.png',
      screenshots: [
        '/Grandioso/Grandioso1.png',
        '/Grandioso/Grandioso2.png',
        '/Grandioso/Grandioso3.png',
        '/Grandioso/Grandioso4.png',
        '/Grandioso/Grandioso5.png',
      ],
    },
    {
      id: 'CutAndRecover',
      title:'豆|頁：なんかきられてももどるやつ（企画段階）',
      desc: '頭部が左右に分断された後に回復するVR体験（IVRC2025展示予定作品）',
      playtime: 'およそ3分',
      period: 'およそ4か月を予定（現在制作中）',
      job: 'プロジェクトリーダー・企画・プログラマ',
      point: '「頭が縦に真っ二つに分かれる」という普段ありえないような感覚をVRを利用した視覚，触覚，聴覚提示により没入感ある形で再現。さらに手を使ってまるで何事もなかったかのように簡単に再生することも体験させる。これにより現実の法則から逸脱した身体性の面白さが際立ち，身体が斬られる体験を，恐怖感を伴う「二度と体験したくない」コンテンツから，ワクワク感を伴う「何度でも体験したい」コンテンツとして体験できる。',
      comment: `本企画はIVRC2025に応募したものです。IVRCとは「学生を中心としたチームでインタラクティブ作品を企画・制作するチャレンジ」です（https://ivrc.net/2025/）。
      事前に企画書による書類審査があり，その審査を通過した企画が実際に制作され日本VR学会大会などで展示されます。
      現在は企画書による書類審査を通過し制作に着手した段階です。書類審査には96件の応募があり，そのうちの20件が審査に合格しました。本企画はその合格した企画の1つです。以下には企画書完成までの振り返りを述べます。
      このプロジェクトは8名程度のメンバーで構成されています。HMD（ヘッドマウントディスプレイ）を利用したVRならではの新しい体験のアイデアをまずはメンバーで出し合いました。その後，メンバー以外の人からの意見もいただき，「頭が斬られる」体験が最も面白そうだということになりました。
      次にどのように斬られる体験を没入感ある形で実現すればよいのかを考えました。没入感ある提示のためには視覚と触覚が重要そうだと考え，これらについて議論しました。
      視覚については，頭が分かれるのでVR空間での目の位置をずらせばよい，ということが真っ先に思い浮かびました。そこで実際に実装してみて試してみたところ，どうも視界が二重に見えるだけで物足りないことが分かりました。そして様々な演出を加える必要がありそうだ，という結論に至りました。具体的にどのような演出を加えるかはまた今後試行錯誤していく予定です。
      触覚については，実際に輪ゴムで頭を弾いてみたり，頭の切り口に沿ってチューブに水やお湯を流して温度感を提示したりなどいろいろなことを試しました。このように軽く実験してみたり調査をした結果，振動による触覚の提示が学術的にも認められており良さそうだ，という結論に至りました。
      しかし，懸念点がありました。かつてVRでギロチンを体験するコンテンツがあり，それを体験した人が現実の心身に悪影響を及ぼしたという事例がありました。そこで，斬られた後に手で頬を押し込むことで簡単に元に戻ったら面白いのではないかと思い浮かびました。これにより，VR 特有の，現実の法則から逸脱した身体性の面白さが際立ち，身体が斬られる体験を，恐怖感を伴う「二度と体験したくない」コンテンツから，ワクワク感を伴う「何度でも体験したい」コンテンツとして提示することができると考えました。
      以上のような議論を経て企画書が完成しました。
      今回この企画を考えるにあたり，「面白さを言語化する」ことに苦労しました。これまでに作ったゲームはどれもなんとなく面白そうだと思ったものをそのまま形に落とし込んできて，どのように面白いのか，それを作ったところでどのように良いのか，を深く考えたことはありませんでした。また，「今までに無いコンテンツだけど，それは実現しても面白くないから今までに無かっただけではないのか」という質問に答えられるようなものにすることが必要というアドバイスを受け，これに感銘を受けました。総じて，企画書作成では，面白いコンテンツを作ること，そしてそれを他者に説得させることの方法やその難しさを体感しました。
      今後は本体験の実装に取り組んでいきます。この実装もHMDや振動子などこれまでのゲーム制作では用いたことが無いハードウェアを用いた実装になるため苦労するとは思いますが，良い経験になるであろうと確信しています。`,
      thumb: '/CutAndRecover/CutAndRecover.png',
      screenshots: [
        '/CutAndRecover/CutAndRecover.png',
      ],
      pdf: '/CutAndRecover/IVRC2025_plan.pdf'
    }
];
